var documenterSearchIndex = {"docs":
[{"location":"api/","page":"API","title":"API","text":"CurrentModule = Bolt","category":"page"},{"location":"api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"","category":"page"},{"location":"api/","page":"API","title":"API","text":"Modules = [Bolt]","category":"page"},{"location":"api/#Bolt._lgamma-Tuple{Any}","page":"API","title":"Bolt._lgamma","text":"log of the gamma function\n\n\n\n\n\n","category":"method"},{"location":"api/#Bolt._loop_integrate_sph_bessel_filon-NTuple{8, Any}","page":"API","title":"Bolt._loop_integrate_sph_bessel_filon","text":"same as above but suitable for use in a piecewise integrator.  re-use the moment I(ka) which was I(kb) previously\n\n\n\n\n\n","category":"method"},{"location":"api/#Bolt.customion-NTuple{5, Any}","page":"API","title":"Bolt.customion","text":"Convenience function to create an ionisation history from some tables\n\n\n\n\n\n","category":"method"},{"location":"api/#Bolt.integrate_sph_bessel_filon-NTuple{7, Any}","page":"API","title":"Bolt.integrate_sph_bessel_filon","text":"integrates a quadratic polynomial with moments. input f, f‚Ä≤, f‚Ä≥ are those evaluated at a, over interval (a,b). Uses a preconstructed interpolator for the moments.\n\n\n\n\n\n","category":"method"},{"location":"api/#Bolt.peebles_X‚Çë-NTuple{4, Any}","page":"API","title":"Bolt.peebles_X‚Çë","text":"peebles_X‚Çë(par, X‚Çë‚ÇÄ, x_start, x_end)\n\nSolve the Peebles equation over a span of scale factors, and then construct an interpolator mapping scale factor to the resulting ionization fraction.\n\nArguments:\n\npar: cosmological parameters\nX‚Çë‚ÇÄ: initial ionization fraction\nx_start: scale factor to begin integration\nx_end: scale factor to end integration\n\nReturns:\n\ngeneric function: interpolator for X‚Çë(x)\n\n\n\n\n\n","category":"method"},{"location":"api/#Bolt.saha_peebles_recombination-Union{Tuple{AbstractCosmoParams{T}}, Tuple{T}} where T","page":"API","title":"Bolt.saha_peebles_recombination","text":"saha_peebles_recombination(par::AbstractCosmoParams)\n\nUtility function for generating a decent approximation to X‚Çë in ŒõCDM recombination, using the Saha equation until z=1587.4 and then the Peebles equation for the rest.\n\n\n\n\n\n","category":"method"},{"location":"dev/#Dev-Notes","page":"Dev Notes","title":"Dev Notes","text":"","category":"section"},{"location":"dev/#Conventions","page":"Dev Notes","title":"Conventions","text":"","category":"section"},{"location":"dev/","page":"Dev Notes","title":"Dev Notes","text":"This package works in Planck units, i.e.","category":"page"},{"location":"dev/","page":"Dev Notes","title":"Dev Notes","text":"c = ƒß = œµ‚ÇÄ = k_B = 1","category":"page"},{"location":"dev/","page":"Dev Notes","title":"Dev Notes","text":"Note that G ‚â† 1.","category":"page"},{"location":"dev/","page":"Dev Notes","title":"Dev Notes","text":"Conventionally, any scalar function of time, such as \\eta, takes as input the logarithm of the scale factor x ‚â° log(a). Any scalar function of time which does not operate on x must be marked with an underscore for the variable it does take, for example H_a.","category":"page"},{"location":"basic_usage/#Bolt.jl","page":"Basic Usage","title":"Bolt.jl","text":"","category":"section"},{"location":"basic_usage/","page":"Basic Usage","title":"Basic Usage","text":"using Bolt, Plots, ForwardDiff, LaTeXStrings, ThreadTools, Base.Threads","category":"page"},{"location":"basic_usage/","page":"Basic Usage","title":"Basic Usage","text":"This notebook walks you through some of the capabilities of Bolt - first through how to compute some of the main observables (and their derivatives) and then through how to look at some internal quantities.","category":"page"},{"location":"basic_usage/","page":"Basic Usage","title":"Basic Usage","text":"note: Note\nThis is a low-level and fairly in-flux API, mainly meant as a snapshot of the existing capabilities. A user-friendly high-level API will be added in the future. ","category":"page"},{"location":"basic_usage/","page":"Basic Usage","title":"Basic Usage","text":"First, check how many threads we are using. See here for how to start Julia with more threads, which will lead to better performance. ","category":"page"},{"location":"basic_usage/","page":"Basic Usage","title":"Basic Usage","text":"nthreads()","category":"page"},{"location":"basic_usage/","page":"Basic Usage","title":"Basic Usage","text":"FRW Background setup","category":"page"},{"location":"basic_usage/","page":"Basic Usage","title":"Basic Usage","text":"# Assign cosmological parameters\nùï° = CosmoParams(Œ©_c = 0.3) # set kwargs like so to change the default values\n\nfunction FRW_setup(ùï°)\n    # Compute expansion history quantities\n    bg = Background(ùï°)\n    # Compute ionization history (via RECFAST)\n    ùï£ = Bolt.RECFAST(bg=bg, Yp=ùï°.Y_p, OmegaB=ùï°.Œ©_b, OmegaG=ùï°.Œ©_r)\n    ih = IonizationHistory(ùï£, ùï°, bg)\n    return bg, ih\nend\n\nbg, ih = FRW_setup(ùï°);\nnothing # hide","category":"page"},{"location":"basic_usage/#P_{L}(k)","page":"Basic Usage","title":"P_L(k)","text":"","category":"section"},{"location":"basic_usage/","page":"Basic Usage","title":"Basic Usage","text":"# Matter power spectrum\nkmin, kmax, nk = 10bg.H‚ÇÄ, 5000bg.H‚ÇÄ, 32\nks = log10_k(kmin, kmax, nk) # k grid\npL = tmap(k -> plin(k, ùï°, bg, ih), ks)\nplot(\n    ks, vcat(pL...), \n    xscale=:log10, yscale=:log10, label=false,\n    xlabel=L\"k \\ [h/\\mathrm{Mpc}]\", ylabel=L\"P_L(k) \\ [\\mathrm{Mpc}/h]^3\"\n)","category":"page"},{"location":"basic_usage/","page":"Basic Usage","title":"Basic Usage","text":"# Gradient wrt Œ©_c\n# Define a function that changes ùï° - need to recompute background components, as they depend on Œ©_c\nfunction pL_Œ©_c(Œ©_c::T) where T\n    ùï° = CosmoParams{T}(Œ©_c=Œ©_c)\n    bg, ih = FRW_setup(ùï°)\n    return tmap(k -> plin(k, ùï°, bg, ih)[1], ks)\nend\n‚àÇpL_‚àÇŒ©_c = ForwardDiff.derivative(pL_Œ©_c, 0.3);\nnothing # hide","category":"page"},{"location":"basic_usage/","page":"Basic Usage","title":"Basic Usage","text":"plot(\n    ks, abs.(‚àÇpL_‚àÇŒ©_c), \n    xscale=:log10, yscale=:log10, label=false,\n    xlabel=L\"k \\ [h/\\mathrm{Mpc}]\", ylabel=L\"\\vert \\partial_{\\Omega_c} P_L(k) \\vert\"\n)","category":"page"},{"location":"basic_usage/#C{TT}(\\ell)","page":"Basic Usage","title":"C^TT(ell)","text":"","category":"section"},{"location":"basic_usage/","page":"Basic Usage","title":"Basic Usage","text":"# CMB C·µÄ·µÄ(‚Ñì)\n‚Ñìmin, ‚Ñìmax, n‚Ñì = 2, 20, 1200\n‚Ñìs = ‚Ñìmin:‚Ñìmax:n‚Ñì\nkmin, kmax, nk = 0.1bg.H‚ÇÄ, 1000bg.H‚ÇÄ, 100\nks = quadratic_k(kmin, kmax, nk)\nsf = source_grid(ùï°, bg, ih, ks, BasicNewtonian()) # set up LOS source function interpolator\nC·µÄ·µÄ = cltt(‚Ñìs, ùï°, bg, ih, sf)\np2 = plot(‚Ñìs, (@. ‚Ñìs^2 * C·µÄ·µÄ), label=false, xlabel=L\"\\ell\", ylabel=L\"\\ell^2 C^{TT}(\\ell)\")","category":"page"},{"location":"basic_usage/","page":"Basic Usage","title":"Basic Usage","text":"# gradient wrt Œ©_b\nfunction C·µÄ·µÄ_Œ©_b(Œ©_b::T) where T # type-stable wrapper\n    ùï° = CosmoParams{T}(Œ©_b=Œ©_b)\n    bg, ih = FRW_setup(ùï°)\n    sf = source_grid(ùï°, bg, ih, ks, BasicNewtonian())\n    return cltt(‚Ñìs, ùï°, bg, ih, sf)\nend\n‚àÇC·µÄ·µÄ_‚àÇŒ©_b = ForwardDiff.derivative(C·µÄ·µÄ_Œ©_b,0.045);\nnothing # hide","category":"page"},{"location":"basic_usage/","page":"Basic Usage","title":"Basic Usage","text":"plot(\n    ‚Ñìs, (@. ‚Ñìs^2 * ‚àÇC·µÄ·µÄ_‚àÇŒ©_b), \n    label=false, xlabel=L\"\\ell\", ylabel=L\"\\ell^2 \\partial_{\\Omega_b} C^{TT}(\\ell)\"\n)\n","category":"page"},{"location":"basic_usage/#Some-internal-quantities","page":"Basic Usage","title":"Some internal quantities","text":"","category":"section"},{"location":"basic_usage/","page":"Basic Usage","title":"Basic Usage","text":"Expansion history: ","category":"page"},{"location":"basic_usage/","page":"Basic Usage","title":"Basic Usage","text":"# Conformal time\nplot(bg.x_grid, bg.Œ∑, xlabel=L\"\\log(a)\", ylabel=L\"\\eta\", label=false, yscale=:log10)","category":"page"},{"location":"basic_usage/","page":"Basic Usage","title":"Basic Usage","text":"# Hubble parameter\nplot(bg.x_grid, bg.‚Ñã, xlabel=L\"\\log(a)\", ylabel=L\"\\mathcal{H}\", label=false, yscale=:log10)","category":"page"},{"location":"basic_usage/","page":"Basic Usage","title":"Basic Usage","text":"Ionization history: ","category":"page"},{"location":"basic_usage/","page":"Basic Usage","title":"Basic Usage","text":"# Free electron fraction\nplot(bg.x_grid, ih.X‚Çë, xlabel=L\"\\log(a)\", ylabel=L\"X_{e}\", label=false)","category":"page"},{"location":"basic_usage/","page":"Basic Usage","title":"Basic Usage","text":"# Visibility function\nplot(bg.x_grid, ih.gÃÉ, xlabel=L\"\\log(a)\", ylabel=L\"g\", label=false)\nxlims!(-10, 0)","category":"page"},{"location":"basic_usage/","page":"Basic Usage","title":"Basic Usage","text":"","category":"page"},{"location":"#Bolt","page":"Bolt.jl","title":"Bolt","text":"","category":"section"},{"location":"","page":"Bolt.jl","title":"Bolt.jl","text":"(Image: Dev) (Image: ) ","category":"page"},{"location":"","page":"Bolt.jl","title":"Bolt.jl","text":"(Image: Build Status) (Image: codecov)","category":"page"},{"location":"","page":"Bolt.jl","title":"Bolt.jl","text":"‚ö° Bolt is a pure-Julia integrator for the Boltzmann equations in cosmology. It can accurately compute the gradient of the CMB power spectrum, with respect to cosmological parameters, using forward-mode automatic differentiation.","category":"page"},{"location":"","page":"Bolt.jl","title":"Bolt.jl","text":"Contributors: Jamie Sullivan, Zack Li, Marius Millea","category":"page"},{"location":"#Install","page":"Bolt.jl","title":"Install","text":"","category":"section"},{"location":"","page":"Bolt.jl","title":"Bolt.jl","text":"Bolt requires Julia 1.5+. To install, from the package prompt, run:","category":"page"},{"location":"","page":"Bolt.jl","title":"Bolt.jl","text":"pkg> add https://github.com/xzackli/Bolt.jl","category":"page"},{"location":"#Gallery","page":"Bolt.jl","title":"Gallery","text":"","category":"section"},{"location":"","page":"Bolt.jl","title":"Bolt.jl","text":"A CMB temperature power spectrum and gradient from Bolt.jl. (Image: ) (Image: )","category":"page"},{"location":"","page":"Bolt.jl","title":"Bolt.jl","text":"A linear matter power spectrum and gradient from Bolt.jl. (Image: ) (Image: )","category":"page"}]
}
